#set( $after713 = $bonitaVersion.matches('7.(1[3-9]|[2-9][0-9]).*') || $bonitaVersion.matches('[8-99].[0-9]+.*') )
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>${groupId}</groupId>
    <artifactId>${artifactId}</artifactId>
    <version>${version}</version>

    <name>${apiDisplayName}</name>
    <description>${apiDesc}</description>

    <properties>
        <!-- Maven -->
        <java.version>#if( $after713 )
11#else
1.8#end</java.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <maven.build.timestamp.format>yyyy.MM.dd-hh.mm</maven.build.timestamp.format>

        <!-- Bonita -->
        <bonita-runtime.version>${bonitaVersion}</bonita-runtime.version>
#if ( not ( $after713 ) )
        <slf4j-api.version>1.7.25</slf4j-api.version>
#end
#if( not ($after713) )
        <groovy.version>2.4.21</groovy.version>
#end

        <!-- Test -->
        <spock-core.version>#if( $after713 )
2.0-groovy-3.0#else
1.3-groovy-2.4#end</spock-core.version>
        <byte-buddy.version>1.11.5</byte-buddy.version>
        <logback-classic.version>1.2.3</logback-classic.version>

        <!-- Maven plugins -->
        <maven-compiler-plugin.version>3.8.1</maven-compiler-plugin.version>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>
        <maven-assembly-plugin.version>3.3.0</maven-assembly-plugin.version>
        <maven-surefire-plugin.version>2.22.2</maven-surefire-plugin.version>
        <groovy-eclipse-compiler.version>3.7.0</groovy-eclipse-compiler.version>
        <groovy-eclipse-batch.version>#if( $after713 )
3.0.8-01#else
2.4.21-01#end</groovy-eclipse-batch.version>

    </properties>

    <dependencyManagement>
        <dependencies>

#if( $after713 )
            <dependency>
                <groupId>org.bonitasoft.runtime</groupId>
                <artifactId>bonita-runtime-bom</artifactId>
                <version>${bonita-runtime.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
#else
            <dependency>
                <groupId>javax.servlet</groupId>
                <artifactId>javax.servlet-api</artifactId>
                <version>3.1.0</version>
            </dependency>
#end

        </dependencies>
    </dependencyManagement>

    <dependencies>
        <!-- Bonita -->
#if( ${sp} == 'false' )
        <dependency>
            <groupId>org.bonitasoft.web</groupId>
            <artifactId>bonita-web-extensions</artifactId>
#if ( not ( $after713 ) )
            <version>${bonita-runtime.version}</version>
#end
            <scope>provided</scope>
        </dependency>

#else
        <dependency>
            <groupId>com.bonitasoft.web</groupId>
            <artifactId>bonita-web-extensions-sp</artifactId>
#if ( not ( $after713 ) )
            <version>${bonita-runtime.version}</version>
#end
            <scope>provided</scope>
        </dependency>
#end
#if( $after713 )
        <dependency>
            <groupId>org.codehaus.groovy</groupId>
            <artifactId>groovy-json</artifactId>
            <scope>provided</scope>
        </dependency>
        <!-- You may add more Groovy modules if required, see https://groovy-lang.org/documentation.html#groovymoduleguides -->
#else
        <dependency>
            <groupId>org.codehaus.groovy</groupId>
            <artifactId>groovy-all</artifactId>
            <version>${groovy.version}</version>
            <scope>provided</scope>
        </dependency>
#end
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
#if ( not ( $after713 ) )
            <version>${slf4j-api.version}</version>
#end
            <scope>provided</scope>
        </dependency>

        <!-- Bonita BDM -->
#if( ${bdmGroupId} != '!' )
        <dependency>
            <groupId>${bdmGroupId}</groupId>
            <artifactId>bdm-client</artifactId>
            <version>${bdmVersion}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>${bdmGroupId}</groupId>
            <artifactId>bdm-dao</artifactId>
            <version>${bdmVersion}</version>
            <scope>provided</scope>
        </dependency>
#else
        <!--    Uncomment to add BDM dependencies -->
        <!--    <dependency> -->
        <!--        <groupId>[bdm groupId goes here]</groupId> -->
        <!--        <artifactId>bdm-client</artifactId> -->
        <!--        <version>[bdm version goes here]</version> -->
        <!--        <scope>provided</scope> -->
        <!--    </dependency> -->
        <!--    <dependency> -->
        <!--        <groupId>[bdm groupId goes here]</groupId> -->
        <!--        <artifactId>bdm-dao</artifactId> -->
        <!--        <version>[bdm version goes here]</version> -->
        <!--        <scope>provided</scope> -->
        <!--    </dependency> -->
#end

        <!-- Test -->
        <dependency>
            <groupId>org.spockframework</groupId>
            <artifactId>spock-core</artifactId>
            <version>${spock-core.version}</version>
            <scope>test</scope>
        </dependency>
        <!-- enables mocking of classes (in addition to interfaces) -->
        <dependency>
            <groupId>net.bytebuddy</groupId>
            <artifactId>byte-buddy</artifactId>
            <version>${byte-buddy.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>${logback-classic.version}</version>
            <scope>test</scope>
        </dependency>

    </dependencies>
    
    <build>
        <defaultGoal>verify</defaultGoal>
        <sourceDirectory>src/main/groovy</sourceDirectory>
        <testSourceDirectory>src/test/groovy</testSourceDirectory>

        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${maven-surefire-plugin.version}</version>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin.version}</version>
                <configuration>
                    <compilerId>groovy-eclipse-compiler</compilerId>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>org.codehaus.groovy</groupId>
                        <artifactId>groovy-eclipse-compiler</artifactId>
                        <version>${groovy-eclipse-compiler.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>org.codehaus.groovy</groupId>
                        <artifactId>groovy-eclipse-batch</artifactId>
                        <version>${groovy-eclipse-batch.version}</version>
                    </dependency>
                </dependencies>
            </plugin>
            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>${maven-assembly-plugin.version}</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                        <configuration>
                            <descriptorSourceDirectory>${project.basedir}/src/assembly</descriptorSourceDirectory>
                            <appendAssemblyId>false</appendAssemblyId>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
