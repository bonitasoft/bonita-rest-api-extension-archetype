#The technical name of the Rest API Extension
#Must be URL compliant, i.e. alpha-numeric characters (no whitespace) and be prefixed by "custompage_"
name=custompage_datasource

#Name displayed in the portal
displayName=Datasource Rest API extension

#Description displayed in the portal
description=A Rest API extension reading a datasource

#Must be apiExtension for rest api extension
contentType=apiExtension

#Declare at least one api extension here (comma-separated value)
apiExtensions=datasource

#for each declared api extension you have to specify
#following properties : method,pathTemplate,classFileName and permissions

#Accept one HTTP verb like GET|POST|PUT|PATCH|DELETE|HEAD|OPTIONS
#GET is the recommended value for a Rest API Extension.
#Write operation are supposed to be performed by the process.
datasource.method=GET

#Define the url path template
#Resulting url: ../API/extension/my/path/template
datasource.pathTemplate=datasource

#Declare associated RestAPIController Groovy file
datasource.classFileName=Index.groovy

#Declare the permissions list (comma-separated value)
#For each permission declared you must bind them either to a user profile (User, Administrator, Custom profiles...) or to a specific user.
#Edit this configuration file ${bonita.home}/client/tenants/${tenant_id}/conf/resources-permissions-mapping.properties
#Append the resource permission mapping for your api (eg: GET|extension/datasource=[customPermission1,customPermission2])
#Then map the permission to the user profile or a user in ${bonita.home}/client/tenants/${tenant_id}/conf/custom-permissions-mapping.properties
#eg : user|john=[customPermission1,customPermission2] or profile|User=[customPermission1,customPermission2]
#You will have to restart the web server to apply the changes made above.
datasource.permissions=customPermission1,customPermission2