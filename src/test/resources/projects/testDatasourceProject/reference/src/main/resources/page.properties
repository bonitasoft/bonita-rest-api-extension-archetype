#The technical name of the REST API extension
#Must be URL compliant (alpha-numeric characters with no whitespace) and be prefixed by "custompage_"
name=custompage_datasource

#Name displayed in the Portal
displayName=Datasource Rest API extension

#Description displayed in the Portal
description=A Rest API extension reading a datasource

#Must be apiExtension for a REST API extension
contentType=apiExtension

#Declare at least one API extension here (comma-separated list)
apiExtensions=datasource

#For each declared API extension,  specify the
#following properties: method,pathTemplate,classFileName and permissions

#Specify one HTTP verb from GET|POST|PUT|PATCH|DELETE|HEAD|OPTIONS
#GET is the recommended value for a REST API extension.
#Write operations should be performed by a process.
datasource.method=GET

#Define the URL path template
#Resulting URL: ../API/extension/my/path/template
datasource.pathTemplate=datasource

#Declare the associated RestAPIController Groovy file
datasource.classFileName=com/bonitasoft/archetype/test/Index.groovy

#Declare the permissions list (comma-separated list)
#For each permission declared, you must bind it either to a user profile (for example User, Administrator, or a custom profile) or to a specific user.
#Edit the ${bonita.home}/client/tenants/${tenant_id}/conf/resources-permissions-mapping.properties configuration file to
#append the resource permission mapping for your API (for example: GET|extension/datasource=[customPermission1,customPermission2]).
#Then map the permission to a user profile or a user in ${bonita.home}/client/tenants/${tenant_id}/conf/custom-permissions-mapping.properties.
#For example: user|john=[customPermission1,customPermission2] or profile|User=[customPermission1,customPermission2]
#Restart the web server to apply these changes to permissions.
datasource.permissions=customPermission1,customPermission2
